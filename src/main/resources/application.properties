spring.datasource.url=jdbc:postgresql://localhost:5432/rest
spring.datasource.username=postgres
spring.datasource.password=password

#http.port=8080
server.port=2137

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect

spring.security.user.name=mati
spring.security.user.password=$2a$12$qeOvWz4g9SKGvnY9I/g/pOvet2yo2oWTq29827VLT5/qnhNHCYRe2

jwt.secret=auth

#HTTPS TEMPORARY DISABLED
#server.ssl.enabled=true
#server.ssl.keyAlias=sm
#server.ssl.keyStoreType=PKCS12
#server.ssl.keyStorePassword=bootsecurity
#server.ssl.keyStore= src/main/resources/mati.p12


#openapi
openapi.project-title=@project.name@
openapi.project-version=@project.version@
openapi.project-description=@project.description@

springdoc.swagger-ui.csrf.enabled=true

#DDOS Protection
spring.cache.type=redis
spring.cache.redis.cache-null-values=false
spring.data.redis.host=127.0.0.1
spring.data.redis.port=6379

bucket4j.enabled=true
bucket4j.filters[0].cache-name=buckets
bucket4j.filters[0].http-response-body={ "status":429, "error":"Too many requestes", "message": "You have exhausted your API" }
bucket4j.filters[0].url=.*
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=seconds
bucket4j.filters[0].rate-limits[0].bandwidths[0].fixed-refill-interval=0
bucket4j.filters[0].rate-limits[0].bandwidths[0].fixed-refill-interval-unit=seconds